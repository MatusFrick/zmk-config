/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        
       combo_tab {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp TAB>;
        };
        
       combo_del {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BACKSPACE>;
        };
       combo_ent {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };
       combo_function {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo 2>;
        };

       combo_accent_1 {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&macro_accent_1>;
        };
       combo_accent_2 {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&macro_accent_2>;
        };

    };
    
    macros {
        macro_accent_1: macro_accent_1 {
            compatible = "zmk,behavior-macro";
            label = "accent_1";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RALT >,
                <&macro_tap &kp SQT>,
                <&macro_release &kp RALT >;
        };
        macro_accent_2: macro_accent_2 {
            compatible = "zmk,behavior-macro";
            label = "accent_1";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp RALT &kp RSHFT>,
                <&macro_tap &kp DOT>,
                <&macro_release &kp RALT &kp RSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
       	default_layer {
			bindings = <
			&kp Q &kp W &kp F &kp P &kp B 						&kp J &kp L  &kp U  &kp Y  &kp SEMI 
			&kp A &kp R &kp S &kp T &kp G 						&kp M &kp N  &kp E  &kp I  &kp O
			&kp Z &kp X &kp C &kp D &kp V				        &kp K &kp H  &kp COMMA &kp DOT &kp SLASH
	          				&mo 1  &kp SPACE					&kp SHIFT &
			>;
			}; 

       	number_layer {
			bindings = <
			&kp N1     &kp N2   &kp N3 	 &kp N4  	&kp N5  	&kp N6  &kp N7 	  &kp N8  	 &kp N9 	&kp N0    
			&kp HOME   &kp LEFT &kp UP   &kp RIGHT 	&kp END 	&kp   	&kp   	  &kp SQT    &kp LBKT   &kp RBKT  
			&kp   	   &kp  	&kp DOWN &kp  &kp     			&kp     &kp GRAVE &kp MINUS  &kp EQUAL  &kp BACKSLASH 
						    	   &none  &kp SPACE			&kp SHIFT & 
			>;
			};
		
		function_layer {
			bindings = <
			&kp F1 &kp F2  &kp F3  &kp F4 &kp F5  		&kp F6 		  &kp F7  &kp F8 &kp F9 &kp F10 
			&kp   &kp  &kp  &kp  &  					&F11  		  &kp F12 &kp PSCRN  &kp K_VOL_UP   &kp K_MUTE 
			&kp BT_CLR  &  &  & &bt BT_SEL 0     		&bt BT_SEL 1  &  &  &kp K_VOL_DN   &to 3
						  &hm LSHIFT SPACE &  			&kp LALT  & 
			>;
			};	

		game_layer {
			bindings = <
			&kp ESC   &kp Q &kp W &kp E &kp R 			&kp T &kp Y   &kp U   &kp I  &to 0
			&kp TAB   &kp A &kp S &kp D &kp F  			&kp G &kp H  &kp J &kp K &kp L 
			&kp LCTRL &kp Z &kp X &kp C &kp V   		&kp B &kp N  &kp M  &kp O &kp P   
						 &kp LSHIFT &kp SPACE  			&kp LCTRL &kp RCTRL 
			>;
			};	
	};
};
